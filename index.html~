<script src="https://d3js.org/d3.v7.min.js"></script>

<svg></svg>

<script>
	var height = 600;
	var width = 800;
	var margin = ({top: 20, right: 30, bottom: 30, left: 40});

	var x, y, color;

	//comment

	//<function filterNA(d) {
	//		return d.Weight != "NA" && d.MPG != "NA";
	//	}->

	d3.csv("cars-sample.csv", d3.autoType).then(function(d) {
			
			console.log(d);
			buildScatter(d);
		})

	function buildScatter(data) {
			x = d3.scaleLinear()
				.domain(d3.extent(data, d => d.Weight)).nice()
				.range([margin.left, width - margin.right])

			y = d3.scaleLinear()
				.domain(d3.extent(data, d => d.MPG)).nice()
				.range([height - margin.bottom, margin.top])

			color = d3.scaleOrdinal(
					data.map((d) => d.Manufacturer),
					d3.schemeCategory10
				)

			var svg = d3
				.select("svg")
				.attr("viewBox", [0, 0, width, height])
				.property("value", []);
			
			svg.append("g").call(xAxis);
			svg.append("g").call(yAxis);
			
			var dot = svg
				.selectAll("circle")
				.data(data)
				.join("circle")
				.attr("transform", (d) => `translate(${x(d.Weight)},${y(d.MPG)})`)
				.attr("r", function(d) {return (d.Weight*0.003);})
				.attr("fill", (d) => color(d.Manufacturer))
				.style("opacity", 0.5);
		}
	
	const xAxis = (g) => g
		.attr("transform", `translate(0,${height - margin.bottom})`)
		.call(d3.axisBottom(x))
		.call((g) => g.select(".domain").remove())
		.call((g) => g
				.append("text")
				.attr("x", width/2)
				.attr("y", margin.bottom - 4)
				.attr("fill", "#000")
				.attr("font-weight", "bold")
				.attr("text-anchor","end")
				.text("Weight")
				)

	const yAxis = (g) => g
		.attr("transform", `translate(${margin.left},0)`)
		.call(d3.axisLeft(y)
			.ticks(5))
		.call((g) => g
				.select(".tick:last-of-type text")
				.clone()
				.attr("transform", "translate(-36, 300)rotate(-90)")
				.attr("text-anchor", "start")
				.attr("font-weight", "bold")
				.text("MPG")
				);


	
</script>
